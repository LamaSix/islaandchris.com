/*!
 * islaandchris.com
 * Isla and Chris's wedding website.
 * https://github.com/LamaSix/islaandchris.com
 * @author Max Kirchoff
 * @version 1.0.0
 * Copyright 2017. MIT licensed.
 */
.clear:after,.clear:before{content:" ";display:table}.clear{*zoom:1}.clear:after{clear:both}*{box-sizing:border-box;font-smoothing:antialiased;text-rendering:optimizeLegibility}body{font-family:din-2014-narrow,system,sans-serif;text-transform:uppercase;font-weight:700;color:#304984;transition:all .4s ease-in .3s;background-color:#fcd6d6}button,input{box-shadow:none!important;outline:none}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}::selection{background:#333;color:#fff;text-shadow:none}::-moz-selection{background:#333;color:#fff;text-shadow:none}::-webkit-selection{background:#333;color:#fff;text-shadow:none}a{text-decoration:none;color:#304984}nav{line-height:.8}nav>div{position:fixed;z-index:1}nav #rsvp{top:5vw;left:5vw}nav #rsvp a{display:block;background:#fff;border:3px solid #304984;padding:20px}nav #rsvp a:hover{background:#ff6446;color:#fff;border-color:#fff}@media (max-width:800px){nav #rsvp a{padding:10px}}nav #location{top:5vw;right:5vw}nav #location a,nav #location a:active,nav #location a:visited{display:inline-block;position:relative;line-height:1.6}nav #location a:active:after,nav #location a:after,nav #location a:visited:after{position:absolute;width:100%;content:"";display:block;border-bottom:3px solid #304984;bottom:0}nav #location a:active:hover:after,nav #location a:hover:after,nav #location a:visited:hover:after{border-color:#ff6446}@media (max-width:800px){nav #location{display:none}}nav #location #map-locator{width:26px;margin-bottom:-2px;margin-right:5px}nav #location #map-locator,nav #location a{display:inline-block;vertical-align:bottom}nav #date{bottom:5vw;left:5vw}nav #date a,nav #date a:active,nav #date a:visited{display:inline-block;position:relative;line-height:1.6}nav #date a:active:after,nav #date a:after,nav #date a:visited:after{position:absolute;width:100%;content:"";display:block;border-bottom:3px solid #304984;bottom:0}nav #date a:active:hover:after,nav #date a:hover:after,nav #date a:visited:hover:after{border-color:#ff6446}@media (max-width:800px){nav #date{display:none}}nav #gift-registry{bottom:5vw;right:5vw}@media (min-width:799px){nav #gift-registry a,nav #gift-registry a:active,nav #gift-registry a:visited{display:inline-block;position:relative;line-height:1.6}nav #gift-registry a:active:after,nav #gift-registry a:after,nav #gift-registry a:visited:after{position:absolute;width:100%;content:"";display:block;border-bottom:3px solid #304984;bottom:0}nav #gift-registry a:active:hover:after,nav #gift-registry a:hover:after,nav #gift-registry a:visited:hover:after{border-color:#ff6446}}@media (max-width:800px){nav #gift-registry a{display:block;background:#fff;border:3px solid #304984;padding:10px}nav #gift-registry a:hover{background:#ff6446;color:#fff;border-color:#fff}}article{position:absolute;top:0;left:0;right:0;bottom:0}article>section{height:100vh;width:100vw}article>section div,article>section h1,article>section h2,article>section h3{font-size:10vw;font-weight:700;letter-spacing:.5vw;margin:1vw 0;line-height:1.2}@media (min-width:799px){article>section div,article>section h1,article>section h2,article>section h3{font-size:5vw}}article>section p{font-size:5vw;text-transform:none;letter-spacing:normal}@media (min-width:799px){article>section p{font-size:1.6vw}}article>section a,article>section a:active,article>section a:visited{display:inline-block;position:relative}article>section a:active:after,article>section a:after,article>section a:visited:after{content:"";position:absolute;display:block;border-bottom:.5vw solid #304984;bottom:0;width:100%}article>section a:active:hover:after,article>section a:hover:after,article>section a:visited:hover:after{border-color:#ff6446}article>section#intro #intro-wrapper{width:60%;margin:0 auto}@media (min-width:799px){article>section#intro #intro-wrapper{width:25%}}article>section#intro #intro-wrapper svg{vertical-align:top}article>section#intro #intro-wrapper svg:nth-of-type(2){display:none}article>section#intro #intro-wrapper:hover svg:nth-of-type(2){display:block}article>section#intro #intro-wrapper:hover svg:first-of-type{display:none}article>section#invitation{width:90%;text-align:center;margin:0 auto;line-height:1;letter-spacing:.1vw}@media (min-width:799px){article>section#invitation{width:80%}}article>section#invitation h2,article>section#invitation p{margin:0}article>section#invitation a{line-height:1.6}article>section#invitation a:after{border-bottom:.25vw solid #304984}article>section#invitation a:hover:after{border-color:#ff6446}article>section#ideas,article>section#our-story{width:80%;text-align:center;margin:0 auto;line-height:1;letter-spacing:.1vw}#rsvp-form{display:none;position:fixed;z-index:2;top:5vw;bottom:5vw;left:5vw;right:5vw;background:#fff;border:.25vw solid #304984}#rsvp-form .fail,#rsvp-form .success{display:none;width:80%;margin:30% auto;text-align:center}#rsvp-form form{width:80%;margin:40% auto 0}@media (min-width:799px){#rsvp-form form{width:55%;margin:20% auto}}#rsvp-form form>div.field{border-bottom:3px solid #304984;margin-bottom:25%}@media (min-width:799px){#rsvp-form form>div.field{margin-bottom:10%}}#rsvp-form form>div.field>span{display:block;float:left}#rsvp-form form>div.field div.input{width:100%;display:block;outline:none;cursor:text!important;text-align:right;color:#ff6446}#rsvp-form form>div.field:nth-of-type(n) div.input{padding-left:50px}#rsvp-form form>div.field:nth-of-type(3) div.input{padding-left:150px}#rsvp-form form>div.buttons{text-align:center}#rsvp-form form>div.buttons button{text-align:center;display:inline-block;background:#fff;border:3px solid #304984;padding:1.6vw;width:100px;border-radius:0;color:#304984}#rsvp-form form>div.buttons button:first-of-type{margin-right:2vw}#rsvp-form form>div.buttons button:hover{background:#ff6446;color:#fff;border-color:#fff}#rsvp-form .close{position:absolute;top:5vw;right:5vw;width:4vw;height:4vw;outline:none;background:none;border:none;cursor:pointer}@media (min-width:799px){#rsvp-form .close{top:2.5vw;right:2.5vw}}#rsvp-form .close:after,#rsvp-form .close:before{right:0;bottom:0;background-color:#304984;content:" ";display:block;position:absolute;width:32px;height:2px}@media (min-width:799px){#rsvp-form .close:after,#rsvp-form .close:before{width:4vw;height:.25vw;top:50%;bottom:auto}}#rsvp-form .close:before{transform:rotate(45deg)}#rsvp-form .close:after{transform:rotate(-45deg)}#rolled{position:fixed;z-index:2;top:0;bottom:0;left:0;right:0;background:rgba(0,0,0,.8)}#rolled .video{width:100%;height:100%}@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZXMvX2NsZWFyZml4LnNjc3MiLCJzdHlsZS5jc3MiLCJtb2R1bGVzL19kZWZhdWx0cy5zY3NzIiwibW9kdWxlcy9fdmFycy5zY3NzIiwibW9kdWxlcy9fbm9ybWFsaXplLnNjc3MiLCJtb2R1bGVzL19taXNjLnNjc3MiLCJtb2R1bGVzL19hcHAuc2NzcyIsIm1peGlucy9fbGlua3Muc2NzcyIsIm1vZHVsZXMvX3ByaW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSwyQkFDRSxZQUFhLEFBQ2IsYUFBZSxDQUNoQixBQUNELFFDQ0UsTURBUyxDQURYLEFBU0MsYUFGRyxVQUFZLENBQ2IsQUVaSCxFQUNFLHNCQUF1QixBQUN2QiwyQkFBNEIsQUFDNUIsaUNBQW1DLENBQ3BDLEFBSUQsS0FDRSw4Q0FBbUQsQUFDbkQseUJBQTBCLEFBQzFCLGdCQUFrQixBQUNsQixjQUNBLEFDWmUsK0JEWWlCLEFBQ2hDLHdCQ2RXLENEZVosQUFJRCxhQUdFLDBCQUE0QixBQUM1QixZQUFjLENBQ2Y7O0FFeEJELDRFQUE0RSxBQU81RSxLQUNFLHVCQUF3QixBQUN4QiwwQkFBMkIsQUFDM0IsNkJBQStCLENBQ2hDLEFBTUQsS0FDRSxRQUFVLENBQ1gsQUFXRCxvRkFZRSxhQUFlLENBQ2hCLEFBTUQsNEJBSUUsb0JBQXNCLENBQ3ZCLEFBTUQsc0JBQ0UsYUFBYyxBQUNkLFFBQVUsQ0FDWCxBQU1ELFNBQ0UsdUJBQXlCLENBQzFCLEFBT0Qsa0JBRUUsWUFBYyxDQUNmLEFBVUQsRUFDRSw2QkFBOEIsQUFDOUIsb0NBQXNDLENBQ3ZDLEFBT0QsaUJBRUUsZUFBaUIsQ0FDbEIsQUFVRCxZQUNFLG1CQUFvQixBQUNwQiwwQkFBMkIsQUFDM0IsZ0NBQWtDLENBQ25DLEFBTUQsU0FFRSxvQkFBcUIsQUFTckIsa0JBQW9CLENBUnJCLEFBZUQsSUFDRSxpQkFBbUIsQ0FDcEIsQUFPRCxHQUNFLGNBQWUsQUFDZixjQUFpQixDQUNsQixBQU1ELEtBQ0Usc0JBQXVCLEFBQ3ZCLFVBQVksQ0FDYixBQU1ELE1BQ0UsYUFBZSxDQUNoQixBQU9ELFFBRUUsY0FBZSxBQUNmLGNBQWUsQUFDZixrQkFBbUIsQUFDbkIsdUJBQXlCLENBQzFCLEFBRUQsSUFDRSxhQUFnQixDQUNqQixBQUVELElBQ0UsU0FBWSxDQUNiLEFBU0QsSUFDRSxpQkFBbUIsQ0FDcEIsQUFNRCxlQUNFLGVBQWlCLENBQ2xCLEFBVUQsa0JBSUUsZ0NBQWtDLEFBQ2xDLGFBQWUsQ0FDaEIsQUFNRCxPQUNFLGVBQWlCLENBQ2xCLEFBT0QsR0FDRSx1QkFBd0IsQUFDeEIsU0FBVSxBQUNWLGdCQUFrQixDQUNuQixBQVVELDZCQUlFLGFBQWMsQUFDZCxRQUFVLENBQ1gsQUFNRCxTQUNFLGVBQWtCLENBQ25CLEFBT0QsYUFFRSxnQkFBa0IsQ0FDbkIsQUFPRCxjQUVFLG1CQUFxQixDQUN0QixBQVFELHFEQUlFLHlCQUEyQixDQUM1QixBQU1ELHdIQUlFLGtCQUFtQixBQUNuQixTQUFXLENBQ1osQUFNRCw0R0FJRSw2QkFBK0IsQ0FDaEMsQUFNRCxTQUNFLHdCQUEwQixBQUMxQixhQUFjLEFBQ2QsMEJBQStCLENBQ2hDLEFBU0QsT0FDRSxzQkFBdUIsQUFDdkIsY0FBZSxBQUNmLGNBQWUsQUFDZixlQUFnQixBQUNoQixVQUFXLEFBQ1gsa0JBQW9CLENBQ3JCLEFBTUQsU0FDRSxhQUFlLENIYmpCLEFHY0MsNkJBU0Msc0JBQXVCLEFBQ3ZCLFNBQVcsQ0hkYixBR2VDLGtGQVFDLFdBQWEsQ0hmZixBR2dCQyxjQVFDLDZCQUE4QixBQUM5QixtQkFBcUIsQ0hoQnZCLEFHaUJDLHFGQVFDLHVCQUF5QixDQUMxQixBQU1ELDRCQUNFLGNBQWUsQUFDZixXQUFjLENBQ2YsQUFPRCw2QkFDRSwwQkFBMkIsQUFDM0IsWUFBYyxDQUNmLEFDbGFELFlBQ0UsZ0JBQWlCLEFBQ2pCLFdBQVksQUFDWixnQkFBa0IsQ0FDbkIsQUFDRCxpQkFDRSxnQkFBaUIsQUFDakIsV0FBWSxBQUNaLGdCQUFrQixDQUNuQixBQUNELG9CQUNFLGdCQUFpQixBQUNqQixXQUFZLEFBQ1osZ0JBQWtCLENBQ25CLEFDZEQsRUFDRSxxQkFBc0IsQUFDdEIsYUhEZSxDR0VoQixBQUVELElBS0UsY0FBaUIsQ0FMbkIsQUFtRkMsUUFqRkcsZUFBZ0IsQUFDaEIsU0FBWSxDQUhoQixBQUlHLFVBSUMsUUhUWSxBR1VaLFFIVlksQ0dDaEIsQUEwQkcsWUFmRyxjQUFlLEFBQ2YsZ0JBQWlCLEFBQ2pCLHlCSGpCVyxBR2tCWCxZQUFjLENBZHBCLEFBeUJLLGtCQVJHLG1CSHBCTyxBR3FCUCxXQUFZLEFBQ1osaUJBQW1CLENBQ3BCLEFBRUQseUJBdEJOLFlBdUJRLFlBQWMsQ0FFakIsQ0F6QkwsQUF5QkssY0FJRCxRSDlCWSxBRytCWixTSC9CWSxDR2tEYixBQ3JERCwrREFDRSxxQkFBc0IsQUFDdEIsa0JBQW1CLEFBQ25CLGVBQWlCLENBSG5CLEFBbUJDLGlGQWJHLGtCQUFrQixBQUNsQixXQUFZLEFBQ1osV0FBWSxBQUNaLGNBQWUsQUFDZixnQ0pWVyxBSVdYLFFBQVUsQ0FYZCxBQVlHLG1HQUlHLG9CSmZPLENHb0NYLEFDcEJHLHlCRGJQLGNBa0NNLFlBQWMsQ0FlakIsQ0FqREgsQUFpREcsMkJBWEcsV0FBWSxBQUdaLG1CQUFvQixBQUNwQixnQkFBa0IsQ0ExQ3hCLEFBMkNLLDJDQUpDLHFCQUFzQixBQUN0QixxQkFBdUIsQ0F4QzdCLEFBZ0RLLFVBSUQsV0hyRFksQUdzRFosUUh0RFksQ0c0RGIsQUMvREQsbURBQ0UscUJBQXNCLEFBQ3RCLGtCQUFtQixBQUNuQixlQUFpQixDQUhuQixBQW1CQyxxRUFiRyxrQkFBa0IsQUFDbEIsV0FBWSxBQUNaLFdBQVksQUFDWixjQUFlLEFBQ2YsZ0NKVlcsQUlXWCxRQUFVLENBWGQsQUFZRyx1RkFJRyxvQkpmTyxDRzJEWCxBQzNDRyx5QkRiUCxVQXlETSxZQUFjLENBRWpCLENBM0RILEFBMkRHLG1CQUdDLFdIL0RZLEFHZ0VaLFNIaEVZLENHaUVaLEFBa0JELHlCQ3RGRCw4RUFDRSxxQkFBc0IsQUFDdEIsa0JBQW1CLEFBQ25CLGVBQWlCLENBSG5CLEFBbUJDLGdHQWJHLGtCQUFrQixBQUNsQixXQUFZLEFBQ1osV0FBWSxBQUNaLGNBQWUsQUFDZixnQ0pWVyxBSVdYLFFBQVUsQ0FYZCxBQVlHLGtIQUlHLG9CSmZPLENJZ0JSLENEdURILEFDdkRHLHlCRGJQLHFCQXNFUSxjQUFlLEFBQ2YsZ0JBQWlCLEFBQ2pCLHlCSDVFUyxBRzZFVCxZQUFjLENBekV0QixBQWdGTywyQkFKRyxtQkgvRUssQUdnRkwsV0FBWSxBQUNaLGlCQUFtQixDQUNwQixDQUFBLEFBTVQsUUFDRSxrQkFBbUIsQUFDbkIsTUFBTyxBQUNQLE9BQVEsQUFDUixRQUFTLEFBQ1QsUUFBVSxDQUxaLEFBMkhDLGdCQXBIRyxhQUFjLEFBQ2QsV0FBYSxDQVJqQixBQTBIRyw2RUEvR0csZUFBZ0IsQUFDaEIsZ0JBQWtCLEFBQ2xCLG9CQUFxQixBQUNyQixhQUFjLEFBQ2QsZUFBaUIsQ0FFakIsQUFHRCx5QkFwQkwsNkVBa0JRLGFBQWUsQ0FFbEIsQ0FwQkwsQUFvQkssa0JBRUMsY0FBZSxBQUNmLG9CQUFxQixBQUNyQixxQkFBc0IsQ0FFdEIsQUFHRCx5QkE3Qkwsa0JBMkJRLGVBQWlCLENBRXBCLENBN0JMLEFBNkJLLHFFQUdDLHFCQUFzQixBQUN0QixpQkFBbUIsQ0FqQ3pCLEFBaURLLHVGQWJHLFdBQVksQUFDWixrQkFBbUIsQUFDbkIsY0FBZSxBQUNmLGlDSGhJUyxBR2lJVCxTQUFVLEFBQ1YsVUFBWSxDQXpDcEIsQUEwQ08seUdBSUcsb0JIdElLLENHd0ZmLEFBK0NTLHFDQU1ELFVBQVcsQUFDWCxhQUFlLENBRWYsQUFvQkQseUJBNUVQLHFDQXlEVSxTQUFXLENBbUJkLENBNUVQLEFBNEVPLHlDQWZHLGtCQUFvQixDQTdEOUIsQUE4RFMsd0RBR0MsWUFBYyxDQWpFeEIsQUFrRVMsOERBSUcsYUFBZSxDQXRFM0IsQUF1RVcsNkRBRUMsWUFBYyxDQXpFMUIsQUEwRVcsMkJBTUwsVUFBVyxBQUNYLGtCQUFtQixBQUNuQixjQUFlLEFBQ2YsY0FBZSxBQUNmLG1CQUFxQixDQUVyQixBQW1CRCx5QkF6R0wsMkJBdUZRLFNBQVcsQ0FrQmQsQ0F6R0wsQUF5R0ssMkRBZEcsUUFBVSxDQTNGbEIsQUE0Rk8sNkJBR0MsZUFBaUIsQ0EvRnpCLEFBd0dPLG1DQVBHLGlDSDFMTyxDR3lGakIsQUFrR1MseUNBR0csb0JIN0xHLENHd0ZmLEFBc0dXLGdEQWNMLFVBQVcsQUFDWCxrQkFBbUIsQUFDbkIsY0FBZSxBQUNmLGNBQWUsQUFDZixtQkFBcUIsQ0FDdEIsQUFHTCxXQUNFLGFBQWMsQUFDZCxlQUFnQixBQUNoQixVQUFZLEFBQ1osUUh0TmMsQUd1TmQsV0h2TmMsQUd3TmQsU0h4TmMsQUd5TmQsVUh6TmMsQUcwTmQsZ0JBQWlCLEFBQ2pCLDBCSDlOZSxDR3FOakIsQUEySEMscUNBL0dHLGFBQWMsQUFDZCxVQUFXLEFBQ1gsZ0JBQWlCLEFBQ2pCLGlCQUFtQixDQWZ2QixBQWdCRyxnQkFHQyxVQUFXLEFBQ1gsaUJBQW1CLENBRW5CLEFBMkRELHlCQWpGSCxnQkF1Qk0sVUFBVyxBQUNYLGVBQWlCLENBeURwQixDQWpGSCxBQWlGRywwQkFyREcsZ0NIalBXLEFHa1BYLGlCQUFtQixDQUVuQixBQXdCRCx5QkF2REwsMEJBZ0NRLGlCQUFtQixDQXVCdEIsQ0F2REwsQUF1REssK0JBbkJHLGNBQWUsQUFDZixVQUFZLENBckNwQixBQXNDTyxvQ0FHQyxXQUFZLEFBQ1osY0FBZSxBQUNmLGFBQWMsQUFDZCxzQkFBd0IsQUFDeEIsaUJBQWtCLEFBQ2xCLGFIbFFPLENHb05mLEFBK0NPLG1EQUdDLGlCQUFtQixDQWxEM0IsQUFtRE8sbURBRUMsa0JBQW9CLENBckQ1QixBQXNETyw0QkFJRCxpQkFBbUIsQ0ExRHpCLEFBZ0ZLLG1DQW5CRyxrQkFBbUIsQUFDbkIscUJBQXNCLEFBQ3RCLGdCQUFpQixBQUNqQix5QkhyUlMsQUdzUlQsY0FBZSxBQUNmLFlBQWEsQUFDYixnQkFBaUIsQUFDakIsYUh6UlMsQ0dxTmpCLEFBK0VPLGlEQVJHLGdCQUFrQixDQXZFNUIsQUF3RVMseUNBR0MsbUJIL1JLLEFHZ1NMLFdBQVksQUFDWixpQkFBbUIsQ0E3RTdCLEFBOEVTLGtCQU1MLGtCQUFtQixBQUNuQixRSHZTWSxBR3dTWixVSHhTWSxBR3lTWixVQUFVLEFBQ1YsV0FBVyxBQUNYLGFBQWMsQUFDZCxnQkFBaUIsQUFDakIsWUFBYSxBQUNiLGNBQWdCLENBRWhCLEFBNEJELHlCQTFISCxrQkErRk0sVUFBZ0IsQUFDaEIsV0FBa0IsQ0EwQnJCLENBMUhILEFBMEhHLGlEQXRCRyxRQUFTLEFBQ1QsU0FBVSxBQUNWLHlCSDNUVyxBRzRUWCxZQUFhLEFBQ2IsY0FBZSxBQUNmLGtCQUFtQixBQUNuQixXQUFZLEFBQ1osVUFBWSxDQUVaLEFBTUQseUJBbkhMLGlEQThHUSxVQUFXLEFBQ1gsYUFBYyxBQUNkLFFBQVEsQUFDUixXQUFhLENBRWhCLENBbkhMLEFBbUhLLHlCQUVDLHVCQUFpQixDQXJIdkIsQUFzSEssd0JBRUMsd0JBQWlCLENBQ2xCLEFBR0wsUUFDRSxlQUFnQixBQUNoQixVQUFhLEFBQ2IsTUFBTSxBQUNOLFNBQVMsQUFDVCxPQUFPLEFBQ1AsUUFBUSxBQUNSLHlCQUFnQixDQVBsQixBQWFDLGVBSEcsV0FBWSxBQUNaLFdBQWEsQ0FDZCxBRTlWSCxhQUNFLEVBQ0UsaUNBQW1DLEFBQ25DLHFCQUF1QixBQUN2QiwwQkFBNEIsQUFDNUIsMEJBQTZCLENBQzlCLEFBQ0QsWUFFRSx5QkFBMkIsQ0FDNUIsQUFDRCxjQUNFLDJCQUE0QixDQUM3QixBQUNELGtCQUNFLDRCQUE2QixDQUM5QixBQUNELDREQUdFLFVBQVksQ0FDYixBQUNELGVBRUUsc0JBQXVCLEFBQ3ZCLHVCQUF5QixDQUMxQixBQUNELE1BQ0UsMEJBQTRCLENBQzdCLEFBQ0QsT0FFRSx1QkFBeUIsQ0FDMUIsQUFDRCxJQUNFLHdCQUEyQixDQUM1QixBQUNELE1BQ0UsV0FBYyxDQUFBLEFBRWhCLFFBR0UsVUFBVyxBQUNYLFFBQVUsQ0FDWCxBQUNELE1BRUUsc0JBQXdCLENBQ3pCLENBQUEiLCJmaWxlIjoic3R5bGUubWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiVjbGVhciB7XG4gIGNvbnRlbnQ6ICcgJztcbiAgZGlzcGxheTogdGFibGU7XG59XG4uY2xlYXIge1xuICAqem9vbTogMTtcbiAgJjpiZWZvcmUge1xuICAgIEBleHRlbmQgJWNsZWFyO1xuICB9XG4gICY6YWZ0ZXIge1xuICAgIEBleHRlbmQgJWNsZWFyO1xuICAgIGNsZWFyOiBib3RoO1xuICB9XG59XG4iLCIuY2xlYXI6YmVmb3JlLCAuY2xlYXI6YWZ0ZXIge1xuICBjb250ZW50OiAnICc7XG4gIGRpc3BsYXk6IHRhYmxlOyB9XG5cbi5jbGVhciB7XG4gICp6b29tOiAxOyB9XG4gIC5jbGVhcjphZnRlciB7XG4gICAgY2xlYXI6IGJvdGg7IH1cblxuKiB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgdGV4dC1yZW5kZXJpbmc6IG9wdGltaXplTGVnaWJpbGl0eTsgfVxuXG5ib2R5IHtcbiAgZm9udC1mYW1pbHk6IFwiZGluLTIwMTQtbmFycm93XCIsIHN5c3RlbSwgc2Fucy1zZXJpZjtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGNvbG9yOiAjMzA0OTg0O1xuICB0cmFuc2l0aW9uOiBhbGwgLjRzIC4zcyBlYXNlLWluO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkNENkQ2OyB9XG5cbmlucHV0LCBidXR0b24ge1xuICAtbW96LWJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcbiAgLXdlYmtpdC1ib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XG4gIGJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcbiAgb3V0bGluZTogbm9uZTsgfVxuXG4vKiEgbm9ybWFsaXplLmNzcyB2NC4xLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZGVmYXVsdCBmb250IGZhbWlseSBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gSUUgYW5kIGlPUy5cbiAqL1xuaHRtbCB7XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xuICAvKiAxICovXG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cbmJvZHkge1xuICBtYXJnaW46IDA7IH1cblxuLyogSFRNTDUgZGlzcGxheSBkZWZpbml0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSwgYW5kIEZpcmVmb3guXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL1xuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscyxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5tYWluLFxubWVudSxcbm5hdixcbnNlY3Rpb24sXG5zdW1tYXJ5IHtcbiAgLyogMSAqL1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovXG5hdWRpbyxcbmNhbnZhcyxcbnByb2dyZXNzLFxudmlkZW8ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBpT1MgNC03LlxuICovXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICovXG50ZW1wbGF0ZSxcbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4vKiBMaW5rc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICogMi4gUmVtb3ZlIGdhcHMgaW4gbGlua3MgdW5kZXJsaW5lIGluIGlPUyA4KyBhbmQgU2FmYXJpIDgrLlxuICovXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LWRlY29yYXRpb24tc2tpcDogb2JqZWN0cztcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBvdXRsaW5lIG9uIGZvY3VzZWQgbGlua3Mgd2hlbiB0aGV5IGFyZSBhbHNvIGFjdGl2ZSBvciBob3ZlcmVkXG4gKiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuYTphY3RpdmUsXG5hOmhvdmVyIHtcbiAgb3V0bGluZS13aWR0aDogMDsgfVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIEZpcmVmb3ggMzktLlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lO1xuICAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUHJldmVudCB0aGUgZHVwbGljYXRlIGFwcGxpY2F0aW9uIG9mIGBib2xkZXJgIGJ5IHRoZSBuZXh0IHJ1bGUgaW4gU2FmYXJpIDYuXG4gKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogaW5oZXJpdDsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc3R5bGUgaW4gQW5kcm9pZCA0LjMtLlxuICovXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7IH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGJhY2tncm91bmQgYW5kIGNvbG9yIGluIElFIDktLlxuICovXG5tYXJrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMDtcbiAgY29sb3I6ICMwMDA7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuc21hbGwge1xuICBmb250LXNpemU6IDgwJTsgfVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICogYWxsIGJyb3dzZXJzLlxuICovXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTsgfVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTsgfVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLS5cbiAqL1xuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lOyB9XG5cbi8qKlxuICogSGlkZSB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKi9cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IG1hcmdpbiBpbiBJRSA4LlxuICovXG5maWd1cmUge1xuICBtYXJnaW46IDFlbSA0MHB4OyB9XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuICovXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAvKiAxICovXG4gIGhlaWdodDogMDtcbiAgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgLyogMiAqLyB9XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cbiAqL1xuYnV0dG9uLFxuaW5wdXQsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDEgKi9cbiAgbWFyZ2luOiAwO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb250IHdlaWdodCB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xub3B0Z3JvdXAge1xuICBmb250LXdlaWdodDogYm9sZDsgfVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqL1xuYnV0dG9uLFxuaW5wdXQge1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlOyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuLyoqXG4gKiAxLiBQcmV2ZW50IGEgV2ViS2l0IGJ1ZyB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2AgYW5kIGB2aWRlb2BcbiAqICAgIGNvbnRyb2xzIGluIEFuZHJvaWQgNC5cbiAqIDIuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKi9cbmJ1dHRvbixcbmh0bWwgW3R5cGU9XCJidXR0b25cIl0sXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7IH1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0OyB9XG5cbi8qKlxuICogQ2hhbmdlIHRoZSBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgbWFyZ2luOiAwIDJweDtcbiAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0O1xuICAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlO1xuICAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gIC8qIDEgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUuXG4gKi9cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87IH1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC0uXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAtLlxuICovXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGFuZCBjYW5jZWwgYnV0dG9ucyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYLlxuICovXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgdGV4dCBzdHlsZSBvZiBwbGFjZWhvbGRlcnMgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG46Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgb3BhY2l0eTogMC41NDsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMSAqL1xuICBmb250OiBpbmhlcml0O1xuICAvKiAyICovIH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnRm9udC1OYW1lJztcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9mb250LW5hbWUuZW90XCIpO1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL2ZvbnQtbmFtZS5lb3Q/I2llZml4XCIpIGZvcm1hdChcImVtYmVkZGVkLW9wZW50eXBlXCIpLCB1cmwoXCIuLi9mb250cy9mb250LW5hbWUud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIuLi9mb250cy9mb250LW5hbWUudHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpLCB1cmwoXCIuLi9mb250cy9mb250LW5hbWUuc3ZnI2ZvbnQtbmFtZVwiKSBmb3JtYXQoXCJzdmdcIik7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDsgfVxuXG46OnNlbGVjdGlvbiB7XG4gIGJhY2tncm91bmQ6ICMzMzM7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LXNoYWRvdzogbm9uZTsgfVxuXG46Oi1tb3otc2VsZWN0aW9uIHtcbiAgYmFja2dyb3VuZDogIzMzMztcbiAgY29sb3I6ICNmZmY7XG4gIHRleHQtc2hhZG93OiBub25lOyB9XG5cbjo6LXdlYmtpdC1zZWxlY3Rpb24ge1xuICBiYWNrZ3JvdW5kOiAjMzMzO1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC1zaGFkb3c6IG5vbmU7IH1cblxuYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgY29sb3I6ICMzMDQ5ODQ7IH1cblxubmF2IHtcbiAgbGluZS1oZWlnaHQ6IDAuODsgfVxuICBuYXYgPiBkaXYge1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB6LWluZGV4OiA5OTsgfVxuICBuYXYgI3JzdnAge1xuICAgIHRvcDogNXZ3O1xuICAgIGxlZnQ6IDV2dzsgfVxuICAgIG5hdiAjcnN2cCBhIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICAgIGJvcmRlcjogM3B4IHNvbGlkICMzMDQ5ODQ7XG4gICAgICBwYWRkaW5nOiAyMHB4OyB9XG4gICAgICBuYXYgI3JzdnAgYTpob3ZlciB7XG4gICAgICAgIGJhY2tncm91bmQ6ICNGRjY0NDY7XG4gICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICBib3JkZXItY29sb3I6ICNmZmY7IH1cbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA4MDBweCkge1xuICAgICAgICBuYXYgI3JzdnAgYSB7XG4gICAgICAgICAgcGFkZGluZzogMTBweDsgfSB9XG4gIG5hdiAjbG9jYXRpb24ge1xuICAgIHRvcDogNXZ3O1xuICAgIHJpZ2h0OiA1dnc7IH1cbiAgICBuYXYgI2xvY2F0aW9uIGEsIG5hdiAjbG9jYXRpb24gYTphY3RpdmUsIG5hdiAjbG9jYXRpb24gYTp2aXNpdGVkIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjY7IH1cbiAgICAgIG5hdiAjbG9jYXRpb24gYTphZnRlciwgbmF2ICNsb2NhdGlvbiBhOmFjdGl2ZTphZnRlciwgbmF2ICNsb2NhdGlvbiBhOnZpc2l0ZWQ6YWZ0ZXIge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogM3B4IHNvbGlkICMzMDQ5ODQ7XG4gICAgICAgIGJvdHRvbTogMDsgfVxuICAgICAgbmF2ICNsb2NhdGlvbiBhOmhvdmVyOmFmdGVyLCBuYXYgI2xvY2F0aW9uIGE6YWN0aXZlOmhvdmVyOmFmdGVyLCBuYXYgI2xvY2F0aW9uIGE6dmlzaXRlZDpob3ZlcjphZnRlciB7XG4gICAgICAgIGJvcmRlci1jb2xvcjogI0ZGNjQ0NjsgfVxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA4MDBweCkge1xuICAgICAgbmF2ICNsb2NhdGlvbiB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuICAgIG5hdiAjbG9jYXRpb24gI21hcC1sb2NhdG9yIHtcbiAgICAgIHdpZHRoOiAyNnB4O1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcbiAgICAgIG1hcmdpbi1ib3R0b206IC0ycHg7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDVweDsgfVxuICAgIG5hdiAjbG9jYXRpb24gYSB7XG4gICAgICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG4gIG5hdiAjZGF0ZSB7XG4gICAgYm90dG9tOiA1dnc7XG4gICAgbGVmdDogNXZ3OyB9XG4gICAgbmF2ICNkYXRlIGEsIG5hdiAjZGF0ZSBhOmFjdGl2ZSwgbmF2ICNkYXRlIGE6dmlzaXRlZCB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBsaW5lLWhlaWdodDogMS42OyB9XG4gICAgICBuYXYgI2RhdGUgYTphZnRlciwgbmF2ICNkYXRlIGE6YWN0aXZlOmFmdGVyLCBuYXYgI2RhdGUgYTp2aXNpdGVkOmFmdGVyIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIGJvcmRlci1ib3R0b206IDNweCBzb2xpZCAjMzA0OTg0O1xuICAgICAgICBib3R0b206IDA7IH1cbiAgICAgIG5hdiAjZGF0ZSBhOmhvdmVyOmFmdGVyLCBuYXYgI2RhdGUgYTphY3RpdmU6aG92ZXI6YWZ0ZXIsIG5hdiAjZGF0ZSBhOnZpc2l0ZWQ6aG92ZXI6YWZ0ZXIge1xuICAgICAgICBib3JkZXItY29sb3I6ICNGRjY0NDY7IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogODAwcHgpIHtcbiAgICAgIG5hdiAjZGF0ZSB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuICBuYXYgI2dpZnQtcmVnaXN0cnkge1xuICAgIGJvdHRvbTogNXZ3O1xuICAgIHJpZ2h0OiA1dnc7IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNzk5cHgpIHtcbiAgICAgIG5hdiAjZ2lmdC1yZWdpc3RyeSBhLCBuYXYgI2dpZnQtcmVnaXN0cnkgYTphY3RpdmUsIG5hdiAjZ2lmdC1yZWdpc3RyeSBhOnZpc2l0ZWQge1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuNjsgfVxuICAgICAgICBuYXYgI2dpZnQtcmVnaXN0cnkgYTphZnRlciwgbmF2ICNnaWZ0LXJlZ2lzdHJ5IGE6YWN0aXZlOmFmdGVyLCBuYXYgI2dpZnQtcmVnaXN0cnkgYTp2aXNpdGVkOmFmdGVyIHtcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICBib3JkZXItYm90dG9tOiAzcHggc29saWQgIzMwNDk4NDtcbiAgICAgICAgICBib3R0b206IDA7IH1cbiAgICAgICAgbmF2ICNnaWZ0LXJlZ2lzdHJ5IGE6aG92ZXI6YWZ0ZXIsIG5hdiAjZ2lmdC1yZWdpc3RyeSBhOmFjdGl2ZTpob3ZlcjphZnRlciwgbmF2ICNnaWZ0LXJlZ2lzdHJ5IGE6dmlzaXRlZDpob3ZlcjphZnRlciB7XG4gICAgICAgICAgYm9yZGVyLWNvbG9yOiAjRkY2NDQ2OyB9IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogODAwcHgpIHtcbiAgICAgIG5hdiAjZ2lmdC1yZWdpc3RyeSBhIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgICAgIGJvcmRlcjogM3B4IHNvbGlkICMzMDQ5ODQ7XG4gICAgICAgIHBhZGRpbmc6IDEwcHg7IH1cbiAgICAgICAgbmF2ICNnaWZ0LXJlZ2lzdHJ5IGE6aG92ZXIge1xuICAgICAgICAgIGJhY2tncm91bmQ6ICNGRjY0NDY7XG4gICAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgICAgYm9yZGVyLWNvbG9yOiAjZmZmOyB9IH1cblxuYXJ0aWNsZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwOyB9XG4gIGFydGljbGUgPiBzZWN0aW9uIHtcbiAgICBoZWlnaHQ6IDEwMHZoO1xuICAgIHdpZHRoOiAxMDB2dzsgfVxuICAgIGFydGljbGUgPiBzZWN0aW9uIGRpdiwgYXJ0aWNsZSA+IHNlY3Rpb24gaDEsIGFydGljbGUgPiBzZWN0aW9uIGgyLCBhcnRpY2xlID4gc2VjdGlvbiBoMyB7XG4gICAgICBmb250LXNpemU6IDEwdnc7XG4gICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgIGxldHRlci1zcGFjaW5nOiAuNXZ3O1xuICAgICAgbWFyZ2luOiAxdncgMDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjI7IH1cbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA3OTlweCkge1xuICAgICAgICBhcnRpY2xlID4gc2VjdGlvbiBkaXYsIGFydGljbGUgPiBzZWN0aW9uIGgxLCBhcnRpY2xlID4gc2VjdGlvbiBoMiwgYXJ0aWNsZSA+IHNlY3Rpb24gaDMge1xuICAgICAgICAgIGZvbnQtc2l6ZTogNXZ3OyB9IH1cbiAgICBhcnRpY2xlID4gc2VjdGlvbiBwIHtcbiAgICAgIGZvbnQtc2l6ZTogNXZ3O1xuICAgICAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG4gICAgICBsZXR0ZXItc3BhY2luZzogbm9ybWFsOyB9XG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogNzk5cHgpIHtcbiAgICAgICAgYXJ0aWNsZSA+IHNlY3Rpb24gcCB7XG4gICAgICAgICAgZm9udC1zaXplOiAxLjZ2dzsgfSB9XG4gICAgYXJ0aWNsZSA+IHNlY3Rpb24gYSwgYXJ0aWNsZSA+IHNlY3Rpb24gYTphY3RpdmUsIGFydGljbGUgPiBzZWN0aW9uIGE6dmlzaXRlZCB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgICAgIGFydGljbGUgPiBzZWN0aW9uIGE6YWZ0ZXIsIGFydGljbGUgPiBzZWN0aW9uIGE6YWN0aXZlOmFmdGVyLCBhcnRpY2xlID4gc2VjdGlvbiBhOnZpc2l0ZWQ6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBib3JkZXItYm90dG9tOiAwLjV2dyBzb2xpZCAjMzA0OTg0O1xuICAgICAgICBib3R0b206IDA7XG4gICAgICAgIHdpZHRoOiAxMDAlOyB9XG4gICAgICBhcnRpY2xlID4gc2VjdGlvbiBhOmhvdmVyOmFmdGVyLCBhcnRpY2xlID4gc2VjdGlvbiBhOmFjdGl2ZTpob3ZlcjphZnRlciwgYXJ0aWNsZSA+IHNlY3Rpb24gYTp2aXNpdGVkOmhvdmVyOmFmdGVyIHtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiAjRkY2NDQ2OyB9XG4gICAgYXJ0aWNsZSA+IHNlY3Rpb24jaW50cm8gI2ludHJvLXdyYXBwZXIge1xuICAgICAgd2lkdGg6IDYwJTtcbiAgICAgIG1hcmdpbjogMCBhdXRvOyB9XG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogNzk5cHgpIHtcbiAgICAgICAgYXJ0aWNsZSA+IHNlY3Rpb24jaW50cm8gI2ludHJvLXdyYXBwZXIge1xuICAgICAgICAgIHdpZHRoOiAyNSU7IH0gfVxuICAgICAgYXJ0aWNsZSA+IHNlY3Rpb24jaW50cm8gI2ludHJvLXdyYXBwZXIgc3ZnIHtcbiAgICAgICAgdmVydGljYWwtYWxpZ246IHRvcDsgfVxuICAgICAgYXJ0aWNsZSA+IHNlY3Rpb24jaW50cm8gI2ludHJvLXdyYXBwZXIgc3ZnOm50aC1vZi10eXBlKDIpIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTsgfVxuICAgICAgYXJ0aWNsZSA+IHNlY3Rpb24jaW50cm8gI2ludHJvLXdyYXBwZXI6aG92ZXIgc3ZnOm50aC1vZi10eXBlKDIpIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7IH1cbiAgICAgIGFydGljbGUgPiBzZWN0aW9uI2ludHJvICNpbnRyby13cmFwcGVyOmhvdmVyIHN2ZzpudGgtb2YtdHlwZSgxKSB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgICBhcnRpY2xlID4gc2VjdGlvbiNpbnZpdGF0aW9uIHtcbiAgICAgIHdpZHRoOiA5MCU7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICBtYXJnaW46IDAgYXV0bztcbiAgICAgIGxpbmUtaGVpZ2h0OiAxO1xuICAgICAgbGV0dGVyLXNwYWNpbmc6IC4xdnc7IH1cbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA3OTlweCkge1xuICAgICAgICBhcnRpY2xlID4gc2VjdGlvbiNpbnZpdGF0aW9uIHtcbiAgICAgICAgICB3aWR0aDogODAlOyB9IH1cbiAgICAgIGFydGljbGUgPiBzZWN0aW9uI2ludml0YXRpb24gaDIsIGFydGljbGUgPiBzZWN0aW9uI2ludml0YXRpb24gcCB7XG4gICAgICAgIG1hcmdpbjogMDsgfVxuICAgICAgYXJ0aWNsZSA+IHNlY3Rpb24jaW52aXRhdGlvbiBhIHtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuNjsgfVxuICAgICAgICBhcnRpY2xlID4gc2VjdGlvbiNpbnZpdGF0aW9uIGE6YWZ0ZXIge1xuICAgICAgICAgIGJvcmRlci1ib3R0b206IDAuMjV2dyBzb2xpZCAjMzA0OTg0OyB9XG4gICAgICAgIGFydGljbGUgPiBzZWN0aW9uI2ludml0YXRpb24gYTpob3ZlcjphZnRlciB7XG4gICAgICAgICAgYm9yZGVyLWNvbG9yOiAjRkY2NDQ2OyB9XG4gICAgYXJ0aWNsZSA+IHNlY3Rpb24jaWRlYXMge1xuICAgICAgd2lkdGg6IDgwJTtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgICAgbGluZS1oZWlnaHQ6IDE7XG4gICAgICBsZXR0ZXItc3BhY2luZzogLjF2dzsgfVxuICAgIGFydGljbGUgPiBzZWN0aW9uI291ci1zdG9yeSB7XG4gICAgICB3aWR0aDogODAlO1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICBsaW5lLWhlaWdodDogMTtcbiAgICAgIGxldHRlci1zcGFjaW5nOiAuMXZ3OyB9XG5cbiNyc3ZwLWZvcm0ge1xuICBkaXNwbGF5OiBub25lO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHotaW5kZXg6IDk5OTtcbiAgdG9wOiA1dnc7XG4gIGJvdHRvbTogNXZ3O1xuICBsZWZ0OiA1dnc7XG4gIHJpZ2h0OiA1dnc7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIGJvcmRlcjogMC4yNXZ3IHNvbGlkICMzMDQ5ODQ7IH1cbiAgI3JzdnAtZm9ybSAuc3VjY2VzcywgI3JzdnAtZm9ybSAuZmFpbCB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICB3aWR0aDogODAlO1xuICAgIG1hcmdpbjogMzAlIGF1dG87XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gICNyc3ZwLWZvcm0gZm9ybSB7XG4gICAgd2lkdGg6IDgwJTtcbiAgICBtYXJnaW46IDQwJSBhdXRvIDA7IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNzk5cHgpIHtcbiAgICAgICNyc3ZwLWZvcm0gZm9ybSB7XG4gICAgICAgIHdpZHRoOiA1NSU7XG4gICAgICAgIG1hcmdpbjogMjAlIGF1dG87IH0gfVxuICAgICNyc3ZwLWZvcm0gZm9ybSA+IGRpdi5maWVsZCB7XG4gICAgICBib3JkZXItYm90dG9tOiAzcHggc29saWQgIzMwNDk4NDtcbiAgICAgIG1hcmdpbi1ib3R0b206IDI1JTsgfVxuICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDc5OXB4KSB7XG4gICAgICAgICNyc3ZwLWZvcm0gZm9ybSA+IGRpdi5maWVsZCB7XG4gICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTAlOyB9IH1cbiAgICAgICNyc3ZwLWZvcm0gZm9ybSA+IGRpdi5maWVsZCA+IHNwYW4ge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgZmxvYXQ6IGxlZnQ7IH1cbiAgICAgICNyc3ZwLWZvcm0gZm9ybSA+IGRpdi5maWVsZCBkaXYuaW5wdXQge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgICAgIGN1cnNvcjogdGV4dCAhaW1wb3J0YW50O1xuICAgICAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICAgICAgY29sb3I6ICNGRjY0NDY7IH1cbiAgICAgICNyc3ZwLWZvcm0gZm9ybSA+IGRpdi5maWVsZDpudGgtb2YtdHlwZShuKSBkaXYuaW5wdXQge1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDUwcHg7IH1cbiAgICAgICNyc3ZwLWZvcm0gZm9ybSA+IGRpdi5maWVsZDpudGgtb2YtdHlwZSgzKSBkaXYuaW5wdXQge1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDE1MHB4OyB9XG4gICAgI3JzdnAtZm9ybSBmb3JtID4gZGl2LmJ1dHRvbnMge1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gICAgICAjcnN2cC1mb3JtIGZvcm0gPiBkaXYuYnV0dG9ucyBidXR0b24ge1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICAgICAgYm9yZGVyOiAzcHggc29saWQgIzMwNDk4NDtcbiAgICAgICAgcGFkZGluZzogMS42dnc7XG4gICAgICAgIHdpZHRoOiAxMDBweDtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMDtcbiAgICAgICAgY29sb3I6ICMzMDQ5ODQ7IH1cbiAgICAgICAgI3JzdnAtZm9ybSBmb3JtID4gZGl2LmJ1dHRvbnMgYnV0dG9uOmZpcnN0LW9mLXR5cGUge1xuICAgICAgICAgIG1hcmdpbi1yaWdodDogMnZ3OyB9XG4gICAgICAgICNyc3ZwLWZvcm0gZm9ybSA+IGRpdi5idXR0b25zIGJ1dHRvbjpob3ZlciB7XG4gICAgICAgICAgYmFja2dyb3VuZDogI0ZGNjQ0NjtcbiAgICAgICAgICBjb2xvcjogI2ZmZjtcbiAgICAgICAgICBib3JkZXItY29sb3I6ICNmZmY7IH1cbiAgI3JzdnAtZm9ybSAuY2xvc2Uge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDV2dztcbiAgICByaWdodDogNXZ3O1xuICAgIHdpZHRoOiA0dnc7XG4gICAgaGVpZ2h0OiA0dnc7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgICBiYWNrZ3JvdW5kOiBub25lO1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNzk5cHgpIHtcbiAgICAgICNyc3ZwLWZvcm0gLmNsb3NlIHtcbiAgICAgICAgdG9wOiAyLjV2dztcbiAgICAgICAgcmlnaHQ6IDIuNXZ3OyB9IH1cbiAgICAjcnN2cC1mb3JtIC5jbG9zZTpiZWZvcmUsICNyc3ZwLWZvcm0gLmNsb3NlOmFmdGVyIHtcbiAgICAgIHJpZ2h0OiAwO1xuICAgICAgYm90dG9tOiAwO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzMwNDk4NDtcbiAgICAgIGNvbnRlbnQ6IFwiIFwiO1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB3aWR0aDogMzJweDtcbiAgICAgIGhlaWdodDogMnB4OyB9XG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogNzk5cHgpIHtcbiAgICAgICAgI3JzdnAtZm9ybSAuY2xvc2U6YmVmb3JlLCAjcnN2cC1mb3JtIC5jbG9zZTphZnRlciB7XG4gICAgICAgICAgd2lkdGg6IDR2dztcbiAgICAgICAgICBoZWlnaHQ6IC4yNXZ3O1xuICAgICAgICAgIHRvcDogNTAlO1xuICAgICAgICAgIGJvdHRvbTogYXV0bzsgfSB9XG4gICAgI3JzdnAtZm9ybSAuY2xvc2U6YmVmb3JlIHtcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTsgfVxuICAgICNyc3ZwLWZvcm0gLmNsb3NlOmFmdGVyIHtcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7IH1cblxuI3JvbGxlZCB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgei1pbmRleDogOTk5O1xuICB0b3A6IDA7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC44KTsgfVxuICAjcm9sbGVkIC52aWRlbyB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlOyB9XG5cbi8qIEV4YW1wbGUgbWVkaWEgcXVlcnkgc2VsZWN0b3JzICovXG5AbWVkaWEgcHJpbnQge1xuICAqIHtcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xuICAgIGNvbG9yOiAjMDAwICFpbXBvcnRhbnQ7XG4gICAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuICAgIHRleHQtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7IH1cbiAgYSxcbiAgYTp2aXNpdGVkIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgfVxuICBhW2hyZWZdOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIiAoXCIgYXR0cihocmVmKSBcIilcIjsgfVxuICBhYmJyW3RpdGxlXTphZnRlciB7XG4gICAgY29udGVudDogXCIgKFwiIGF0dHIodGl0bGUpIFwiKVwiOyB9XG4gIC5pciBhOmFmdGVyLFxuICBhW2hyZWZePVwiamF2YXNjcmlwdDpcIl06YWZ0ZXIsXG4gIGFbaHJlZl49XCIjXCJdOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIlwiOyB9XG4gIHByZSxcbiAgYmxvY2txdW90ZSB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzk5OTtcbiAgICBwYWdlLWJyZWFrLWluc2lkZTogYXZvaWQ7IH1cbiAgdGhlYWQge1xuICAgIGRpc3BsYXk6IHRhYmxlLWhlYWRlci1ncm91cDsgfVxuICB0cixcbiAgaW1nIHtcbiAgICBwYWdlLWJyZWFrLWluc2lkZTogYXZvaWQ7IH1cbiAgaW1nIHtcbiAgICBtYXgtd2lkdGg6IDEwMCUgIWltcG9ydGFudDsgfVxuICBAcGFnZSB7XG4gICAgbWFyZ2luOiAwLjVjbTsgfVxuICBwLFxuICBoMixcbiAgaDMge1xuICAgIG9ycGhhbnM6IDM7XG4gICAgd2lkb3dzOiAzOyB9XG4gIGgyLFxuICBoMyB7XG4gICAgcGFnZS1icmVhay1hZnRlcjogYXZvaWQ7IH0gfVxuIiwiKiB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgdGV4dC1yZW5kZXJpbmc6IG9wdGltaXplTGVnaWJpbGl0eTtcbn1cbmh0bWwge1xufVxuXG5ib2R5IHtcbiAgZm9udC1mYW1pbHk6IFwiZGluLTIwMTQtbmFycm93XCIsIHN5c3RlbSwgc2Fucy1zZXJpZjtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGNvbG9yOiAkcHJpbWFyeTtcbiAgdHJhbnNpdGlvbjogYWxsIC40cyAuM3MgZWFzZS1pbjtcbiAgYmFja2dyb3VuZC1jb2xvcjogJGJnO1xufVxuYm9keSxodG1se1xufVxuXG5pbnB1dCwgYnV0dG9uIHtcbiAgLW1vei1ib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XG4gIC13ZWJraXQtYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuICBib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XG4gIG91dGxpbmU6IG5vbmU7XG59XG4iLCIkYmcgOiAjRkNENkQ2O1xuJHByaW1hcnk6ICMzMDQ5ODQ7XG4kaG92ZXI6ICNGRjY0NDY7XG5cbiRuYXYtbWFyZ2luOiA1dnc7XG5cbiRzbS1tYXgtd2lkdGg6IDgwMHB4O1xuJHNtLW1pbi13aWR0aDogNzk5cHg7XG4iLCIvKiEgbm9ybWFsaXplLmNzcyB2NC4xLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG5cbi8qKlxuICogMS4gQ2hhbmdlIHRoZSBkZWZhdWx0IGZvbnQgZmFtaWx5IGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBJRSBhbmQgaU9TLlxuICovXG5cbmh0bWwge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsgLyogMSAqL1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vKiBIVE1MNSBkaXNwbGF5IGRlZmluaXRpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUsIGFuZCBGaXJlZm94LlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cblxuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscywgLyogMSAqL1xuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbm1haW4sIC8qIDIgKi9cbm1lbnUsXG5uYXYsXG5zZWN0aW9uLFxuc3VtbWFyeSB7IC8qIDEgKi9cbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKi9cblxuYXVkaW8sXG5jYW52YXMsXG5wcm9ncmVzcyxcbnZpZGVvIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGlPUyA0LTcuXG4gKi9cblxuYXVkaW86bm90KFtjb250cm9sc10pIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAwO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cblxucHJvZ3Jlc3Mge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAtLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cblxudGVtcGxhdGUsIC8qIDEgKi9cbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLyogTGlua3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICogMi4gUmVtb3ZlIGdhcHMgaW4gbGlua3MgdW5kZXJsaW5lIGluIGlPUyA4KyBhbmQgU2FmYXJpIDgrLlxuICovXG5cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgLyogMSAqL1xuICAtd2Via2l0LXRleHQtZGVjb3JhdGlvbi1za2lwOiBvYmplY3RzOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBvdXRsaW5lIG9uIGZvY3VzZWQgbGlua3Mgd2hlbiB0aGV5IGFyZSBhbHNvIGFjdGl2ZSBvciBob3ZlcmVkXG4gKiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuXG5hOmFjdGl2ZSxcbmE6aG92ZXIge1xuICBvdXRsaW5lLXdpZHRoOiAwO1xufVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gRmlyZWZveCAzOS0uXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICovXG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTsgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBQcmV2ZW50IHRoZSBkdXBsaWNhdGUgYXBwbGljYXRpb24gb2YgYGJvbGRlcmAgYnkgdGhlIG5leHQgcnVsZSBpbiBTYWZhcmkgNi5cbiAqL1xuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzdHlsZSBpbiBBbmRyb2lkIDQuMy0uXG4gKi9cblxuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG4gKi9cblxuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgYmFja2dyb3VuZCBhbmQgY29sb3IgaW4gSUUgOS0uXG4gKi9cblxubWFyayB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZjA7XG4gIGNvbG9yOiAjMDAwO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gKiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTtcbn1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLS5cbiAqL1xuXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG59XG5cbi8qKlxuICogSGlkZSB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKi9cblxuc3ZnOm5vdCg6cm9vdCkge1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuY29kZSxcbmtiZCxcbnByZSxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgbWFyZ2luIGluIElFIDguXG4gKi9cblxuZmlndXJlIHtcbiAgbWFyZ2luOiAxZW0gNDBweDtcbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gKi9cblxuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDsgLyogMSAqL1xuICBoZWlnaHQ6IDA7IC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7IC8qIDIgKi9cbn1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDEgKi9cbiAgbWFyZ2luOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9udCB3ZWlnaHQgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cblxub3B0Z3JvdXAge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQgeyAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbixcbnNlbGVjdCB7IC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi8qKlxuICogMS4gUHJldmVudCBhIFdlYktpdCBidWcgd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gIGFuZCBgdmlkZW9gXG4gKiAgICBjb250cm9scyBpbiBBbmRyb2lkIDQuXG4gKiAyLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICovXG5cbmJ1dHRvbixcbmh0bWwgW3R5cGU9XCJidXR0b25cIl0sIC8qIDEgKi9cblt0eXBlPVwicmVzZXRcIl0sXG5bdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwicmVzZXRcIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInN1Ym1pdFwiXTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cblxuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInJlc2V0XCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJzdWJtaXRcIl06LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XG59XG5cbi8qKlxuICogQ2hhbmdlIHRoZSBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuZmllbGRzZXQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjYzBjMGMwO1xuICBtYXJnaW46IDAgMnB4O1xuICBwYWRkaW5nOiAwLjM1ZW0gMC42MjVlbSAwLjc1ZW07XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmxlZ2VuZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgY29sb3I6IGluaGVyaXQ7IC8qIDIgKi9cbiAgZGlzcGxheTogdGFibGU7IC8qIDEgKi9cbiAgbWF4LXdpZHRoOiAxMDAlOyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDMgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDsgLyogMSAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUuXG4gKi9cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC0uXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAtLlxuICovXG5cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4OyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGFuZCBjYW5jZWwgYnV0dG9ucyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYLlxuICovXG5cblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgdGV4dCBzdHlsZSBvZiBwbGFjZWhvbGRlcnMgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5cbjo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICBvcGFjaXR5OiAwLjU0O1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cblxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cbn1cbiIsIjo6c2VsZWN0aW9ue1xuICBiYWNrZ3JvdW5kOiAjMzMzO1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC1zaGFkb3c6IG5vbmU7XG59XG46Oi1tb3otc2VsZWN0aW9ue1xuICBiYWNrZ3JvdW5kOiAjMzMzO1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC1zaGFkb3c6IG5vbmU7XG59XG46Oi13ZWJraXQtc2VsZWN0aW9ue1xuICBiYWNrZ3JvdW5kOiAjMzMzO1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC1zaGFkb3c6IG5vbmU7XG59XG4iLCJhIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogJHByaW1hcnk7XG59XG5cbm5hdiB7XG4gID4gZGl2IHtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgei1pbmRleDogOTk7XG4gIH1cbiAgbGluZS1oZWlnaHQ6IDAuODtcblxuICAjcnN2cCB7XG4gICAgdG9wOiAkbmF2LW1hcmdpbjtcbiAgICBsZWZ0OiAkbmF2LW1hcmdpbjtcbiAgICBhIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICAgIGJvcmRlcjogM3B4IHNvbGlkICRwcmltYXJ5O1xuICAgICAgcGFkZGluZzogMjBweDtcblxuICAgICAgJjpob3ZlciB7XG4gICAgICAgIGJhY2tncm91bmQ6ICRob3ZlcjtcbiAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgIGJvcmRlci1jb2xvcjogI2ZmZjtcbiAgICAgIH1cblxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6ICRzbS1tYXgtd2lkdGgpIHtcbiAgICAgICAgcGFkZGluZzogMTBweDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAjbG9jYXRpb24ge1xuICAgIHRvcDogJG5hdi1tYXJnaW47XG4gICAgcmlnaHQ6ICRuYXYtbWFyZ2luO1xuICAgIEBpbmNsdWRlIG5hdi1zdHlsZWQtbGlua3M7XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogJHNtLW1heC13aWR0aCkge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG5cbiAgICAjbWFwLWxvY2F0b3Ige1xuICAgICAgd2lkdGg6IDI2cHg7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xuICAgICAgbWFyZ2luLWJvdHRvbTogLTJweDtcbiAgICAgIG1hcmdpbi1yaWdodDogNXB4O1xuICAgIH1cblxuICAgIGEge1xuICAgICAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB9XG4gIH1cblxuICAjZGF0ZSB7XG4gICAgYm90dG9tOiAkbmF2LW1hcmdpbjtcbiAgICBsZWZ0OiAkbmF2LW1hcmdpbjtcbiAgICBAaW5jbHVkZSBuYXYtc3R5bGVkLWxpbmtzO1xuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6ICRzbS1tYXgtd2lkdGgpIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuICB9XG5cbiAgI2dpZnQtcmVnaXN0cnkge1xuICAgIGJvdHRvbTogJG5hdi1tYXJnaW47XG4gICAgcmlnaHQ6ICRuYXYtbWFyZ2luO1xuICAgIEBtZWRpYSAobWluLXdpZHRoOiAkc20tbWluLXdpZHRoKSB7XG4gICAgICBAaW5jbHVkZSBuYXYtc3R5bGVkLWxpbmtzO1xuICAgIH1cblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAkc20tbWF4LXdpZHRoKSB7XG4gICAgICBhIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgICAgIGJvcmRlcjogM3B4IHNvbGlkICRwcmltYXJ5O1xuICAgICAgICBwYWRkaW5nOiAxMHB4O1xuXG4gICAgICAgICY6aG92ZXIge1xuICAgICAgICAgIGJhY2tncm91bmQ6ICRob3ZlcjtcbiAgICAgICAgICBjb2xvcjogI2ZmZjtcbiAgICAgICAgICBib3JkZXItY29sb3I6ICNmZmY7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuYXJ0aWNsZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xuICAmID4gc2VjdGlvbiB7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgICB3aWR0aDogMTAwdnc7XG5cbiAgICBkaXYsIGgxLCBoMiwgaDMge1xuICAgICAgZm9udC1zaXplOiAxMHZ3O1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICBsZXR0ZXItc3BhY2luZzogLjV2dztcbiAgICAgIG1hcmdpbjogMXZ3IDA7XG4gICAgICBsaW5lLWhlaWdodDogMS4yO1xuXG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogJHNtLW1pbi13aWR0aCkge1xuICAgICAgICBmb250LXNpemU6IDV2dztcbiAgICAgIH1cbiAgICB9XG4gICAgcCB7XG4gICAgICBmb250LXNpemU6IDV2dztcbiAgICAgIHRleHQtdHJhbnNmb3JtOiBub25lO1xuICAgICAgbGV0dGVyLXNwYWNpbmc6bm9ybWFsO1xuXG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogJHNtLW1pbi13aWR0aCkge1xuICAgICAgICBmb250LXNpemU6IDEuNnZ3O1xuICAgICAgfVxuICAgIH1cblxuICAgIGEsIGE6YWN0aXZlLCBhOnZpc2l0ZWQge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgICAmOmFmdGVyIHtcbiAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogLjV2dyBzb2xpZCAkcHJpbWFyeTtcbiAgICAgICAgYm90dG9tOiAwO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgIH1cblxuICAgICAgJjpob3ZlciB7XG4gICAgICAgICY6YWZ0ZXIge1xuICAgICAgICAgIGJvcmRlci1jb2xvcjogJGhvdmVyO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgJiNpbnRybyB7XG4gICAgICAjaW50cm8td3JhcHBlciB7XG4gICAgICAgIHdpZHRoOiA2MCU7XG4gICAgICAgIG1hcmdpbjogMCBhdXRvO1xuXG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAkc20tbWluLXdpZHRoKSB7XG4gICAgICAgICAgd2lkdGg6IDI1JTtcbiAgICAgICAgfVxuXG4gICAgICAgIHN2ZyB7XG4gICAgICAgICAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgICAgICAgfVxuXG4gICAgICAgIHN2ZzpudGgtb2YtdHlwZSgyKSB7XG4gICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgfVxuXG4gICAgICAgICY6aG92ZXIge1xuICAgICAgICAgIHN2ZzpudGgtb2YtdHlwZSgyKSB7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICB9XG4gICAgICAgICAgc3ZnOm50aC1vZi10eXBlKDEpIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgJiNpbnZpdGF0aW9uIHtcbiAgICAgIHdpZHRoOiA5MCU7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICBtYXJnaW46IDAgYXV0bztcbiAgICAgIGxpbmUtaGVpZ2h0OiAxO1xuICAgICAgbGV0dGVyLXNwYWNpbmc6IC4xdnc7XG5cbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAkc20tbWluLXdpZHRoKSB7XG4gICAgICAgIHdpZHRoOiA4MCU7XG4gICAgICB9XG5cbiAgICAgIGgyLCBwIHtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgfVxuXG4gICAgICBhIHtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuNjtcbiAgICAgICAgJjphZnRlciB7XG4gICAgICAgICAgYm9yZGVyLWJvdHRvbTogMC4yNXZ3IHNvbGlkICRwcmltYXJ5O1xuICAgICAgICB9XG4gICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICY6YWZ0ZXIge1xuICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiAkaG92ZXI7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgJiNpZGVhcyB7XG4gICAgICB3aWR0aDogODAlO1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICBsaW5lLWhlaWdodDogMTtcbiAgICAgIGxldHRlci1zcGFjaW5nOiAuMXZ3O1xuICAgIH1cblxuICAgICYjb3VyLXN0b3J5IHtcbiAgICAgIHdpZHRoOiA4MCU7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICBtYXJnaW46IDAgYXV0bztcbiAgICAgIGxpbmUtaGVpZ2h0OiAxO1xuICAgICAgbGV0dGVyLXNwYWNpbmc6IC4xdnc7XG4gICAgfVxuICB9XG59XG4jcnN2cC1mb3JtIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB6LWluZGV4Ojk5OTtcbiAgdG9wOiRuYXYtbWFyZ2luO1xuICBib3R0b206JG5hdi1tYXJnaW47XG4gIGxlZnQ6JG5hdi1tYXJnaW47XG4gIHJpZ2h0OiRuYXYtbWFyZ2luO1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICBib3JkZXI6IC4yNXZ3IHNvbGlkICRwcmltYXJ5O1xuXG4gIC5zdWNjZXNzLCAuZmFpbCB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICB3aWR0aDogODAlO1xuICAgIG1hcmdpbjogMzAlIGF1dG87XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG5cbiAgZm9ybSB7XG4gICAgd2lkdGg6IDgwJTtcbiAgICBtYXJnaW46IDQwJSBhdXRvIDA7XG5cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogJHNtLW1pbi13aWR0aCkge1xuICAgICAgd2lkdGg6IDU1JTtcbiAgICAgIG1hcmdpbjogMjAlIGF1dG87XG4gICAgfVxuXG4gICAgPiBkaXYuZmllbGQge1xuICAgICAgYm9yZGVyLWJvdHRvbTogM3B4IHNvbGlkICRwcmltYXJ5O1xuICAgICAgbWFyZ2luLWJvdHRvbTogMjUlO1xuXG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogJHNtLW1pbi13aWR0aCkge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAxMCU7XG4gICAgICB9XG5cbiAgICAgID4gc3BhbiB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBmbG9hdDogbGVmdDtcbiAgICAgIH1cblxuICAgICAgZGl2LmlucHV0IHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBvdXRsaW5lOiBub25lO1xuICAgICAgICBjdXJzb3I6IHRleHQgIWltcG9ydGFudDtcbiAgICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgICAgIGNvbG9yOiAkaG92ZXI7XG4gICAgICB9XG5cbiAgICAgICY6bnRoLW9mLXR5cGUobikgZGl2LmlucHV0IHtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiA1MHB4O1xuICAgICAgfVxuICAgICAgJjpudGgtb2YtdHlwZSgzKSBkaXYuaW5wdXQge1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDE1MHB4O1xuICAgICAgfVxuICAgIH1cblxuICAgID4gZGl2LmJ1dHRvbnMge1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuXG4gICAgICBidXR0b24ge1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICAgICAgYm9yZGVyOiAzcHggc29saWQgJHByaW1hcnk7XG4gICAgICAgIHBhZGRpbmc6IDEuNnZ3O1xuICAgICAgICB3aWR0aDogMTAwcHg7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDA7XG4gICAgICAgIGNvbG9yOiAkcHJpbWFyeTtcblxuICAgICAgICAmOmZpcnN0LW9mLXR5cGUge1xuICAgICAgICAgIG1hcmdpbi1yaWdodDogMnZ3O1xuICAgICAgICB9XG5cbiAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgYmFja2dyb3VuZDogJGhvdmVyO1xuICAgICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICAgIGJvcmRlci1jb2xvcjogI2ZmZjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC5jbG9zZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogJG5hdi1tYXJnaW47XG4gICAgcmlnaHQ6ICRuYXYtbWFyZ2luO1xuICAgIHdpZHRoOjR2dztcbiAgICBoZWlnaHQ6NHZ3O1xuICAgIG91dGxpbmU6IG5vbmU7XG4gICAgYmFja2dyb3VuZDogbm9uZTtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuXG4gICAgQG1lZGlhIChtaW4td2lkdGg6ICRzbS1taW4td2lkdGgpIHtcbiAgICAgIHRvcDogJG5hdi1tYXJnaW4gLyAyO1xuICAgICAgcmlnaHQ6ICRuYXYtbWFyZ2luIC8gMjtcbiAgICB9XG5cbiAgICAmOmJlZm9yZSwgJjphZnRlciB7XG4gICAgICByaWdodDogMDtcbiAgICAgIGJvdHRvbTogMDtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRwcmltYXJ5O1xuICAgICAgY29udGVudDogXCIgXCI7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHdpZHRoOiAzMnB4O1xuICAgICAgaGVpZ2h0OiAycHg7XG5cbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAkc20tbWluLXdpZHRoKSB7XG4gICAgICAgIHdpZHRoOiA0dnc7XG4gICAgICAgIGhlaWdodDogLjI1dnc7XG4gICAgICAgIHRvcDo1MCU7XG4gICAgICAgIGJvdHRvbTogYXV0bztcbiAgICAgIH1cbiAgICB9XG4gICAgJjpiZWZvcmUge1xuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICAgIH1cbiAgICAmOmFmdGVyIHtcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XG4gICAgfVxuICB9XG59XG4jcm9sbGVkIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB6LWluZGV4OiA5OTk7XG4gIHRvcDowO1xuICBib3R0b206MDtcbiAgbGVmdDowO1xuICByaWdodDowO1xuICBiYWNrZ3JvdW5kOiByZ2JhKDAsMCwwLDAuOCk7XG5cbiAgLnZpZGVvIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gIH1cbn1cbiIsIkBtaXhpbiBuYXYtc3R5bGVkLWxpbmtzIHtcbiAgYSwgYTphY3RpdmUsIGE6dmlzaXRlZCB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBsaW5lLWhlaWdodDogMS42O1xuXG4gICAgJjphZnRlciB7XG4gICAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgY29udGVudDogXCJcIjtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgYm9yZGVyLWJvdHRvbTogM3B4IHNvbGlkICRwcmltYXJ5O1xuICAgICAgYm90dG9tOiAwO1xuICAgIH1cblxuICAgICY6aG92ZXIge1xuICAgICAgJjphZnRlciB7XG4gICAgICAgIGJvcmRlci1jb2xvcjogJGhvdmVyO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiQG1lZGlhIHByaW50IHtcbiAgKiB7XG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcbiAgICBjb2xvcjogIzAwMCAhaW1wb3J0YW50O1xuICAgIGJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcbiAgICB0ZXh0LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuICB9XG4gIGEsXG4gIGE6dmlzaXRlZCB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIH1cbiAgYVtocmVmXTphZnRlciB7XG4gICAgY29udGVudDogXCIgKFwiIGF0dHIoaHJlZikgXCIpXCI7XG4gIH1cbiAgYWJiclt0aXRsZV06YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiIChcIiBhdHRyKHRpdGxlKSBcIilcIjtcbiAgfVxuICAuaXIgYTphZnRlcixcbiAgIGFbaHJlZl49XCJqYXZhc2NyaXB0OlwiXTphZnRlcixcbiAgIGFbaHJlZl49XCIjXCJdOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICB9XG4gIHByZSxcbiAgYmxvY2txdW90ZSB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzk5OTtcbiAgICBwYWdlLWJyZWFrLWluc2lkZTogYXZvaWQ7XG4gIH1cbiAgdGhlYWQge1xuICAgIGRpc3BsYXk6IHRhYmxlLWhlYWRlci1ncm91cDtcbiAgfVxuICB0cixcbiAgaW1nIHtcbiAgICBwYWdlLWJyZWFrLWluc2lkZTogYXZvaWQ7XG4gIH1cbiAgaW1nIHtcbiAgICBtYXgtd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgfVxuICBAcGFnZSB7XG4gICAgbWFyZ2luOiAwLjVjbTtcbiAgfVxuICBwLFxuICBoMixcbiAgaDMge1xuICAgIG9ycGhhbnM6IDM7XG4gICAgd2lkb3dzOiAzO1xuICB9XG4gIGgyLFxuICBoMyB7XG4gICAgcGFnZS1icmVhay1hZnRlcjogYXZvaWQ7XG4gIH1cbn1cbiJdfQ== */
